{"version":3,"sources":["library/styled-bs-grid/index.ts","config/grid.ts","library/react-router/history.ts","config/app.ts","views/App/setup.tsx","views/NotFound/NotFound.tsx","utils/equal/index.ts","utils/format/index.ts","views/JsonToDart/JsonToDart.tsx","views/JsonToTypescript/JsonToTypescript.tsx","views/App/RootRoute.tsx","views/App/App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","library/styled-bs-grid/media/media.ts","library/styled-bs-grid/config.ts","library/styled-bs-grid/components/Col/css.ts","library/styled-bs-grid/components/Col/Col.tsx","library/styled-bs-grid/utils/index.ts","library/styled-bs-grid/components/Container/Container.tsx","library/styled-bs-grid/components/Row/Row.tsx","library/styled-bs-grid/components/ThemeProvider/ThemeProvider.tsx"],"names":["gridGutterWidth","gridColumns","gridBreakpoints","xs","sm","md","lg","xl","xxl","containerMaxWidths","gridGutterWidthMedia","history","createBrowserHistory","basename","getSetupParam","console","log","JSON","stringify","nodeEnv","process","siteEnv","window","siteCode","version","gridConfig","NotFound","Container","Title","Content","H2","styled","h1","h2","div","isJSON","jsonString","obj","parse","err","toCapitalize","str","replace","$1","toUpperCase","UpperCaseToLowerLineCase","dataStr","toLowerCase","substr","convertFieldType","key","field","type","default","toString","indexOf","undefined","Array","isArray","length","includes","newObjName","newObj","dataChild","convertField","modelName","jsonObj","constructor","fieldType","defaultValue","push","name","JsonToDart","useForm","control","watch","isUseCopyWith","useMemo","convertData","data","reverse","map","row","join","renderDartModel","className","col","render","style","width","height","onClick","fileName","blob","Blob","href","URL","createObjectURL","link","document","createElement","body","appendChild","download","click","handleDownload","value","JsonToTypescript","setValue","useEffect","trim","RootRoute","path","exact","component","children","to","setup","App","gridTheme","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Intl","PluralRules","require","RelativeTimeFormat","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","getBreakpoints","props","defaultTheme","get","theme","themeName","media","Object","keys","reduce","accumulator","label","strings","interpolations","css","replacePx2Vw","re","styleObj","offset","string","px","Number","isNaN","pixels","px2vw","column","colFlexBasis","generateMedia","filter","sizeName","isCheckNumber0","Date","isEmpty","getCss","Col","attrs","getDataName","forwardRef","forwardAs","ref","as","fluid","getRowMargin","noGutters","Row","GridThemeProvider","composeGridTheme","styledBsGrid","assign"],"mappings":"mIAAA,iQ,6FCgBe,GACXA,gBAAiB,EACjBC,YAAa,GACbC,gBAAiB,CACbC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,IAAK,MAETC,mBAAoB,CAChBL,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,IAAK,MAETE,qBAAsB,CAClBN,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GACJC,IAAK,K,gBCjCEG,EAHCC,YAAqB,CACjCC,SCJoB,KCkBTC,MAXf,WAQI,OAPAC,QAAQC,IAAI,SAAUC,KAAKC,UAAU,CACjCC,QAASC,aACTC,QAAUC,OAAeD,QACzBE,SAAWD,OAAeC,SAC1BC,QAASA,OAGN,CAACb,UAASc,e,6BCENC,EAXE,kBACb,cAACC,EAAD,UACI,gCACI,cAACC,EAAD,kBACA,cAACC,EAAD,UACI,cAACC,EAAD,oDAWVF,EAAQG,IAAOC,GAAV,wCAAGD,CAAH,uKAWLD,EAAKC,IAAOE,GAAV,wCAAGF,CAAH,+EAQFF,EAAUE,IAAOG,IAAV,wCAAGH,CAAH,iIAUPJ,EAAYI,IAAOG,IAAV,wCAAGH,CAAH,4Q,uBCuDR,SAASI,EAAOC,GACnB,IACI,IAAMC,EAAMpB,KAAKqB,MAAMF,GACvB,GAAIC,GAAsB,kBAARA,GAA4B,OAARA,EAClC,OAAO,EAEb,MAAOE,GACL,OAAO,EAEX,OAAO,E,iBC9GJ,SAASC,EAAaC,GAEzB,OAAOA,EAAIC,QAAQ,WAAW,SAAAC,GAAE,OAAIA,EAAGC,iBAyCpC,SAASC,EAAyBJ,GACrC,GAAGA,EAAI,CACH,IAAMK,EAAUL,EAAIC,QAAQ,WAAW,OAAOK,cAC9C,GAA4B,MAAzBD,EAAQE,OAAO,EAAG,GACjB,OAAOF,EAAQE,OAAO,GAG9B,MAAO,GC5CX,IAAMC,EAAmB,SAACC,EAAaC,GAGnC,GADApC,QAAQC,IAAI,sBAAuBmC,EAAOD,GAC7B,OAAVC,EACC,cAAeA,GACX,IAAK,UACD,MAAO,CAACC,KAAM,OAAQC,SAAS,GAEnC,IAAK,SACD,OAAsC,GAAlCF,EAAMG,WAAWC,QAAQ,KAClB,CAACH,KAAM,SAAUC,QAAS,GAE9B,CAACD,KAAM,MAAOC,QAAS,GAElC,IAAK,SACD,MAAO,CAACD,KAAM,SAAUC,aAASG,GAErC,IAAK,SACD,OAAGC,MAAMC,QAAQP,GACVA,EAAMQ,OAAS,EACX,CAAC,SAAS,SAAS,WAAWC,gBAAiBT,EAAM,IAC7C,CAACC,KAAM,eAAgBC,aAASG,GAEpC,CAACJ,KAAK,QAAD,OAAUZ,EAAaU,GAAvB,KAAgCG,aAASG,EAAWK,WAAYrB,EAAaU,GAAMY,OAAQX,EAAM,IAE1G,CAACC,KAAK,gBAAkBC,aAASG,GAGrC,CAACJ,KAAMZ,EAAaU,GAAMG,aAASG,EAAWK,WAAYrB,EAAaU,GAAMY,OAAQX,GAKxG,MAAO,CAACC,KAAM,UAAWC,aAASG,IAIlCO,EAAmB,GAEjBC,EAAe,SAAfA,EAAgBC,EAAmBC,GACrC,IAAMC,EAAwB,GACxBhB,EAAkB,GAIxB,GAAsB,kBAAZe,EAAqB,CAC3B,IAAK,IAAMhB,KAAOgB,EAAS,CAEvB,IAAME,EAAYnB,EAAiBC,EAAKgB,EAAQhB,IAC1CmB,OAAqCb,IAAtBY,EAAUf,QAAV,aAAwCe,EAAUf,SAAU,GACjFc,EAAYG,KAAZ,sBAAgCpB,GAAhC,OAAsCmB,EAAtC,MAEAlB,EAAMmB,KAAN,YAAgBF,EAAUhB,KAA1B,aAAmCF,EAAnC,WAEwBM,IAArBY,EAAUN,aAAiDN,IAAzBY,EAAUP,YAC3CG,EAAaI,EAAUP,WAAYO,EAAUN,QAIrDC,EAAUO,KAAK,CACXC,KAAMN,EACNE,YAAaA,EACbhB,MAAOA,IAIf,OAAOY,GAwIIS,EAnHI,WAAO,IAAD,EACIC,cAAlBC,EADc,EACdA,QADc,GAG0BC,EAH1B,EACLA,OAEqC,CAAC,YAAa,aAAc,kBAH5D,mBAGdV,EAHc,KAGH7B,EAHG,KAGSwC,EAHT,KAKjBV,EAAUW,mBAAQ,WAClB,GAAI1C,EAAOC,GACP,OAAOnB,KAAKqB,MAAMF,KAEvB,CAACA,IAmCE0C,EA/BkB,WACpBf,EAAY,GACZ,IAAMgB,EAAOf,EAAaC,EAAWC,GAASc,UAE9C,MAAM,KAAN,OACNJ,EAAgB,iEAAmE,GAD7E,6EAIA/B,EAAyBoB,GAJzB,wBAMNc,EAAKE,KAAI,SAAAC,GACC,MAAM,KAAN,OACVN,EAAgB,cAAc,GADpB,wCAGJM,EAAIX,KAHA,iBAIRW,EAAIX,KAJI,eAKVW,EAAIf,YAAYgB,KAAK,MALX,sBAQVD,EAAI/B,MAAMgC,KAAK,MARL,yDAWAD,EAAIX,KAXJ,qDAWqDW,EAAIX,KAXzD,iEAY2BW,EAAIX,KAZ/B,yBAeTY,KAAK,MAtBA,YA2BgBC,GAEpB,OACI,qCAEQ,qBAAKC,UAAU,cAAf,SACI,sDAEJ,cAAC,YAAD,CAAWA,UAAU,OAArB,SACI,eAAC,MAAD,WACI,cAAC,MAAD,CAAKC,KAAG,EAAR,SACI,eAAC,MAAD,WACI,cAAC,MAAD,CAAKA,IAAK,GAAV,SACI,cAAC,IAAD,CACIZ,QAASA,EACTH,KAAK,YACLF,aAAa,GACbkB,OAAQ,YAAc,IAAZpC,EAAW,EAAXA,MACN,OAAQ,mCACJqC,MAAO,CAACC,MAAO,QACfrC,KAAK,QACDD,SAMpB,eAAC,MAAD,CAAKmC,IAAK,GAAV,UACI,cAAC,IAAD,CACIZ,QAASA,EACTH,KAAK,gBACLF,aAAa,GACbkB,OAAQ,YAAc,IAAZpC,EAAW,EAAXA,MACN,OAAQ,mCACJC,KAAK,YACDD,OARpB,eAaI,cAAC,IAAD,CACIuB,QAASA,EACTH,KAAK,aACLF,aAAa,GACbkB,OAAQ,YAAc,IAAZpC,EAAW,EAAXA,MACN,OAAQ,sCACJqC,MAAO,CAACC,MAAO,OAAQC,OAAQ,UAC3BvC,eAQ5B,eAAC,MAAD,CAAKmC,KAAG,EAAR,UACI,wBAAQlC,KAAK,SAASuC,QAAS,kBAnHpC,SAAC1B,EAAmBc,GAEvC,IAAIa,EAAQ,UAAM/C,EAAyBoB,GAA/B,SACR4B,EAAO,IAAIC,KAAK,CAACf,GAAO,CACxB3B,KAAM,6BAEN2C,EAAOC,IAAIC,gBAAgBJ,GAE3BK,EAAOC,SAASC,cAAc,KAClCD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAKH,KAAOA,EACZG,EAAKK,SAAWX,EAChBM,EAAKM,QAuGwDC,CAAexC,EAAWa,IAA/D,sBACA,0BACIU,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAC/BgB,MAAO5B,gBC/LjC7B,EAAmB,SAACC,EAAaC,GAGnC,GADApC,QAAQC,IAAI,sBAAuBmC,EAAOD,GAC7B,OAAVC,EACC,cAAeA,GACX,IAAK,UACD,MAAO,CAACC,KAAM,OAAQC,SAAS,GAEnC,IAAK,SACD,OAAsC,GAAlCF,EAAMG,WAAWC,QAAQ,KAClB,CAACH,KAAM,SAAUC,QAAS,GAE9B,CAACD,KAAM,MAAOC,QAAS,GAElC,IAAK,SACD,MAAO,CAACD,KAAM,SAAUC,aAASG,GAErC,IAAK,SACD,OAAGC,MAAMC,QAAQP,GACVA,EAAMQ,OAAS,EACX,CAAC,SAAS,SAAS,WAAWC,gBAAiBT,EAAM,IAC7C,CAACC,KAAM,eAAgBC,aAASG,GAEpC,CAACJ,KAAK,QAAD,OAAUZ,EAAaU,GAAvB,KAAgCG,aAASG,EAAWK,WAAYrB,EAAaU,GAAMY,OAAQX,EAAM,IAE1G,CAACC,KAAK,gBAAkBC,aAASG,GAGrC,CAACJ,KAAMZ,EAAaU,GAAMG,aAASG,EAAWK,WAAYrB,EAAaU,GAAMY,OAAQX,GAKxG,MAAO,CAACC,KAAM,UAAWC,aAASG,IAIlCO,EAAmB,GAEjBC,EAAe,SAAfA,EAAgBC,EAAwBC,GAC1C,IAAMf,EAAkB,GAExB,GAAsB,kBAAZe,EAAqB,CAC3B,IAAK,IAAMhB,KAAOgB,EAAS,CAEvB,IAAME,EAAYnB,EAAiBC,EAAKgB,EAAQhB,IAChDC,EAAMmB,KAAN,YAAgBF,EAAUhB,KAA1B,YAAkCF,EAAlC,WAEwBM,IAArBY,EAAUN,aAAiDN,IAAzBY,EAAUP,YAC3CG,EAAaI,EAAUP,WAAYO,EAAUN,QAIrC,MAAbG,GACCF,EAAUO,KAAK,CACXC,KAAMN,EACNd,MAAOA,IAMnB,OAAOY,GAiHI4C,EA5FU,WAAO,IAAD,EACQlC,cAA5BC,EADoB,EACpBA,QAASC,EADW,EACXA,MAAOiC,EADI,EACJA,SADI,EAGoBjC,EAAM,CAAC,YAAa,aAAc,kBAHtD,mBAGTvC,GAHS,gBAM3ByE,qBAAU,WACND,EAAS,aAAc,iRAc7BE,UACK,IAGH,IAAI5C,EAAUW,mBAAQ,WAClB,GAAI1C,EAAOC,GACP,OAAOnB,KAAKqB,MAAMF,KAEvB,CAACA,IAmBE0C,EAhBkB,WACpBf,EAAY,GACZ,IAAMgB,EAAOf,EAAa,KAAME,GAASc,UAEzC,MAAM,KAAN,OACND,EAAKE,KAAI,SAAAC,GACC,MAAM,eAAN,OACAA,EAAIX,KADJ,eAEVW,EAAI/B,MAAMgC,KAAK,MAFL,aAKTA,KAAK,MAAM2B,OAPN,YAYgB1B,GAEpB,OACI,qCAEQ,qBAAKC,UAAU,cAAf,SACI,4DAEJ,cAAC,YAAD,CAAWA,UAAU,OAArB,SACI,eAAC,MAAD,WACI,cAAC,MAAD,CAAKC,KAAG,EAAR,SACI,cAAC,MAAD,UAEI,cAAC,MAAD,CAAKA,IAAK,GAAV,SACI,cAAC,IAAD,CACIZ,QAASA,EACTH,KAAK,aACLF,aAAa,GACbkB,OAAQ,YAAc,IAAZpC,EAAW,EAAXA,MACN,OAAQ,sCACJqC,MAAO,CAACC,MAAO,OAAQC,OAAQ,UAC3BvC,aAQ5B,cAAC,MAAD,CAAKmC,KAAG,EAAR,SACI,0BACIE,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAC/BgB,MAAO5B,eCvJxBiC,EAbG,WACd,OAAO,cAAC,IAAD,UACH,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,WAAWC,OAAK,EAACC,UAAW1C,IACxC,cAAC,IAAD,CAAOwC,KAAK,iBAAiBC,OAAK,EAACC,UAAWP,IAC9C,cAAC,IAAD,CAAOK,KAAK,IAAIC,OAAK,EAACE,SAAU,cAAC,IAAD,CAAUC,GAAG,eAG7C,cAAC,IAAD,CAAOJ,KAAK,IAAIG,SAAU,cAAC,EAAD,YCRhCE,EAAQvG,IAWCwG,EARH,WACR,OACI,cAAC,oBAAD,CAAmBC,UAAWF,EAAM5F,WAApC,SACI,cAAC,EAAD,OCHQ+F,QACa,cAA7BlG,OAAOmG,SAASC,UAEa,UAA7BpG,OAAOmG,SAASC,UAEhBpG,OAAOmG,SAASC,SAASC,MAAM,2DCfnC,IAYeC,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,8BAAqBC,MAAK,YAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACxDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCOfQ,KAAKC,cACNC,EAAQ,KACRA,EAAQ,KACRA,EAAQ,MAIPF,KAAKG,qBACND,EAAQ,KACRA,EAAQ,KACRA,EAAQ,MAGZE,IAASlD,OACL,cAAC,IAAMmD,WAAP,UACI,cAAC,EAAD,MAEJvC,SAASwC,eAAe,SFmGpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBf,MAAK,SAACgB,GACHA,EAAaC,gBAEhBC,OAAM,SAACC,GACJnI,QAAQmI,MAAMA,EAAMC,YE9FpCvB,K,4GCxCMwB,EAAiB,SAACC,GAAD,mBAAC,eACjBC,IAAapJ,iBACbqJ,IAAIF,EAAMG,MAAMC,KAAY,kBAAmB,MAGhDC,EAAaC,OAAOC,KAAKN,IAAapJ,iBAAiB2J,QACzD,SAACC,EAAaC,GAQV,OADAD,EAAYC,GANK,SAACC,GAAD,2BAAkBC,EAAlB,iCAAkBA,EAAlB,yBAA0CC,YAAzC,CAAD,mCACU,SAACb,GAAD,OAAgBD,EAAeC,GAAOU,KACvDG,IAAG,WAAH,GAAIF,GAAJ,OAAgBC,MAKnBH,IAEX,IAOJ,IAAMK,EAAe,SAACD,GAClB,IAAIE,EAAK,eAET,OAAOF,EAAIjF,KAAI,SAAAoF,GACX,MAAuB,kBAAbA,EACCA,EAAS3H,QAAQ0H,GAAI,SAACzC,EAAO2C,EAAQC,GACxC,IAAMC,EAAKC,OAAOH,GAClB,OAAU,IAAPE,EACQ,IACDE,MAAMF,GAGT7C,EAhBvB,SAAegD,GACX,MAAM,GAAN,OAAWA,GAD0C,uDAAL,KACd,IAAlC,MAauBC,CAAMJ,MAKlBH,MAIfX,EAAMkB,MAAQ,SAACZ,GAAD,2BAAkBC,EAAlB,iCAAkBA,EAAlB,yBAA0CC,YAAzC,CAAD,mCACa,SAACb,GAAD,OAAgBD,EAAeC,GAAOjJ,KACrD+J,EAAaD,IAAG,WAAH,GAAIF,GAAJ,OAAgBC,OAI1BP,S,+BCpDf,oEAMO,IAAMD,EAAY,eACZH,EAAe,CACxBtJ,gBAAiB,GACjBC,YAAa,GACbC,gBAAiB,CACbC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,IAAK,MAETC,mBAAoB,CAChBL,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,IAAK,MAETE,qBAAsB,CAClBN,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,IAAK,M,yMCGE0J,G,KA/BK,CAChB5E,IAAK,SAACuF,EAAa5K,GACf,IAAI6K,EAAe,EAEnB,OAAQD,GACR,KAAK,EACD,MAAM,oKAOV,IAAK,OACD,MAAM,2HAMV,QAEI,MAAM,+BAAN,OADAC,EAAgB,IAAM7K,EAAe4K,EACrC,qCAEYC,EAFZ,sCAGaA,EAHb,oB,sBCRNC,EAAgB,SAAC1B,GAAD,OAAgBM,OACjCC,KAAKP,EAAMG,MAAMC,KAAWvJ,iBAC5B8K,QAAO,SAAAC,GAAQ,MAAiB,OAAbA,KACnBhG,KAAI,SAAAgG,GACD,OAAOvB,IAAMuB,GAAb,yHACsB5B,EAAMG,MAAMC,KAAW/I,qBAAqBuK,GAC7C5B,EAAMG,MAAMC,KAAW/I,qBAAqBuK,ICXlD,SAACvE,GAAD,IAAawE,EAAb,oEACT1H,IAAVkD,GACiB,OAAVA,IACU,IAAVA,GACCwE,GAA4B,IAAVxE,KAChBA,aAAiByE,OAA0B,kBAAVzE,GAAoD,IAA9BiD,OAAOC,KAAKlD,GAAO/C,QAC3D,kBAAV+C,GAA8C,IAAxBA,EAAMI,OAAOnD,ODOvCyH,CAAQ/B,EAAM4B,KAAcf,YAA7B,6DACImB,EAAO/F,IAAI+D,EAAM4B,GAAW5B,EAAMG,MAAMC,KAAWxJ,mBAa/DqL,EAAWvJ,IAAOG,IAAIqJ,OAAM,SAAClC,GAAD,MAAmB,CACjD,YAAa,MACb,kBAAcmC,MAFJ,wCAAGzJ,CAAH,qDAQV,SAACsH,GAAD,OAAgBa,YAAf,IAAD,+RACkBb,EAAMG,MAAMC,KAAWzJ,gBACxBqJ,EAAMG,MAAMC,KAAWzJ,gBAOrCqJ,EAAM/D,KAAO+F,EAAO/F,IAAI+D,EAAM/D,IAAK+D,EAAMG,MAAMC,KAAWxJ,aAE1D8K,EAAc1B,OAIN,kBAAEoC,EAAF,EAAEA,WAAYC,EAAd,EAAcA,UAAcrC,EAA5B,iDAAiD,cAACiC,EAAD,aAAKK,IAAKF,EAAYG,GAAIF,GAAerC,M,+HEtCnG1H,EAAiBI,IAAOG,IAAIqJ,OAAM,SAAClC,GAAD,MAA4B,CAChE,YAAa,YACb,kBAAcmC,MAFE,wCAAGzJ,CAAH,uDAQhB,SAACsH,GAAD,OAAgBa,YAAf,IAAD,2FACkBb,EAAMG,MAAMC,KAAWzJ,gBACxBqJ,EAAMG,MAAMC,KAAWzJ,iBAEpCqJ,EAAMwC,OAAS3B,YAAhB,6CA3Be,SAACb,GAAD,OAAgBM,OAAOC,KAAKP,EAAMG,MAAMC,KAAWvJ,iBACpE+E,KAAI,SAAAgG,GACD,OAAI5B,EAAMG,MAAMC,KAAWvJ,gBAAgB+K,GAAY,GAC5CvB,IAAMuB,GAAb,0EACiB5B,EAAMG,MAAMC,KAAWhJ,mBAAmBwK,OAKlED,QAAO,SAAA9F,GAAG,OAAY,IAARA,KAmBT6F,CAAc1B,QAKT,WAACA,GAAD,OAA2B,cAAC1H,EAAD,eAAe0H,M,yIC7BnDyC,EAAe,SAACzC,GAAD,OAAiBA,EAAM0C,UAAY,EAAlB,WAA0B1C,EAAMG,MAAMC,KAAWzJ,gBAAjD,OAkBhCgM,EAAWjK,IAAOG,IAAIqJ,OAAM,SAAClC,GAAD,MAAiB,CAC/C,YAAa,MACb,kBAAcmC,MAFJ,wCAAGzJ,CAAH,4EASV,SAACsH,GAAD,OAAgBa,YAAf,IAAD,mMACiB4B,EAAazC,GACdyC,EAAazC,IAKzBA,EAAM0C,WAAa7B,YAApB,6CAhCe,SAACb,GAAD,OAAgBM,OAAOC,KAAKP,EAAMG,MAAMC,KAAWvJ,iBACpE+E,KAAI,SAAAgG,GACD,OAAI5B,EAAMG,MAAMC,KAAWvJ,gBAAgB+K,GAAY,GAC5CvB,IAAMuB,GAAb,oHACoB5B,EAAMG,MAAMC,KAAW/I,qBAAqBuK,GAC3C5B,EAAMG,MAAMC,KAAW/I,qBAAqBuK,OAKxED,QAAO,SAAA9F,GAAG,OAAY,IAARA,KAuBT6F,CAAc1B,IAGjBA,EAAM0C,WAAa7B,YAAnB,wIASQ,kBAAEwB,EAAF,EAAEA,UAAcrC,EAAhB,oCAAqC,cAAC2C,EAAD,aAAKJ,GAAIF,GAAerC,M,kGC9C7D4C,EARW,SAAC5C,GAAuB,IAAD,EACVA,EAA5B9B,iBADsC,MAC1B,GAD0B,EACtBJ,EAAYkC,EAAZlC,SAEjB+E,EAAmB,CAACC,aAAcxC,OAAOyC,OAAO,GAAI9C,IAAc/B,IAExE,OAAO,cAAC,IAAD,CAAeiC,MAAO0C,EAAtB,SAAyC/E,M","file":"static/js/main.089c7a21.chunk.js","sourcesContent":["export {default as media} from './media';\nexport {default as Container} from './components/Container';\nexport {default as Row} from './components/Row';\nexport {default as Col} from './components/Col';\nexport {default as GridThemeProvider} from './components/ThemeProvider';\n\nexport * from './media/types';\nexport * from './components/Col/types';\nexport * from './components/Container/types';\nexport * from './components/Row/types';\nexport * from './components/ThemeProvider/types';\n","/**\n * bootstrap grid setting\n *\n * 單位值參考\n * row.padding === col.padding === container.padding\n *\n * 更改格數\n * import grid from \"config/grid\";\n *\n * <GridThemeProvider gridTheme={{\n *     ...grid,\n *     gridColumns: 35,\n *     gridGutterWidth: 3,\n * }}>\n */\n\nexport default {\n    gridGutterWidth: 5,\n    gridColumns: 24,\n    gridBreakpoints: {\n        xs: 0,\n        sm: 576,\n        md: 768,\n        lg: 992,\n        xl: 1200,\n        xxl: 1540,\n    },\n    containerMaxWidths: {\n        sm: 540,\n        md: 720,\n        lg: 960,\n        xl: 1140,\n        xxl: 1410,\n    },\n    gridGutterWidthMedia: {\n        sm: 5,\n        md: 5,\n        lg: 5,\n        xl: 10,\n        xxl: 15,\n    }\n};\n","import {createBrowserHistory} from 'history';\nimport {routePrefixPath} from 'config/app';\n\nconst history = createBrowserHistory({\n    basename: routePrefixPath,\n});\nexport default history;\n","const routePrefixPath = '';\n\n\nexport {\n    routePrefixPath,\n};\n","import gridConfig from 'config/grid';\nimport {version} from '../../../package.json';\nimport {ESiteEnv} from 'config/types';\nimport {history} from 'library/react-router';\n\n\n\nfunction getSetupParam(){\n    console.log('info: ', JSON.stringify({\n        nodeEnv: process.env.NODE_ENV,\n        siteEnv: (window as any).siteEnv as ESiteEnv,\n        siteCode: (window as any).siteCode as string,\n        version: version,\n    }));\n\n    return {history, gridConfig};\n}\n\nexport default getSetupParam;\n","import styled from 'styled-components/macro';\n\n\n/**\n * 找不到頁面\n */\nconst NotFound = () => (\n    <Container>\n        <div>\n            <Title>404</Title>\n            <Content>\n                <H2>This page could not be found.</H2>\n            </Content>\n        </div>\n    </Container>\n);\n\nexport default NotFound;\n\n\n\n\nconst Title = styled.h1`\n    display:inline-block;\n    border-right:1px solid rgba(0, 0, 0,.3);\n    margin:0;\n    margin-right:20px;\n    padding:10px 23px 10px 0;\n    font-size:24px;\n    font-weight:500;\n    vertical-align:top;\n`;\n\nconst H2 = styled.h2`\n    font-size:14px;\n    font-weight:normal;\n    line-height:inherit;\n    margin:0;\n    padding:0;\n`;\n\nconst Content = styled.div`\n    display:inline-block;\n    margin:0;\n    margin-right:20px;\n    padding:10px 23px 10px 0;\n    font-size:24px;\n    font-weight:500;\n    vertical-align:top;\n`;\n\nconst Container = styled.div`\n    width: 100%;\n    color:hsla(0,0%,100%,.9);\n    //background:#fff;\n    font-family:-apple-system, BlinkMacSystemFont, Roboto, Segoe UI, Fira Sans, Avenir, Helvetica Neue, Lucida Grande, sans-serif;\n    height:100vh;\n    text-align:center;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`;\n","import {IsNumberFn} from '../../library/styled-bs-grid/utils/types';\n\n\nexport const reg = {\n    number: /^[\\d]*$/,\n    email: /^[A-Za-z0-9._-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/,\n};\n\n\n\n/**\n * 判定是否為空\n * @param value\n * @param checkOption\n * @returns {boolean}\n */\nexport function isEmpty(value: any, checkOption?: {\n    isZero?: boolean,\n    isFalse?: boolean,\n}) {\n    const defaultCheckOption = {\n        isZero: checkOption?.isZero ?? false,\n        isFalse: checkOption?.isFalse ?? true,\n    };\n    return (\n        value === undefined\n        || value === null\n        || (defaultCheckOption.isFalse && (value === false || value === 'false'))\n        || (defaultCheckOption.isZero && value === 0)\n        || (!(value instanceof Date) && typeof value === 'object' && Object.keys(value).length === 0)\n        || (typeof value === 'string' && value.trim().length === 0)\n    );\n}\n\n/**\n * 判定是否不為空\n * @param value\n * @param checkOption\n * @returns {boolean}\n */\nexport function isNotEmpty(value: any, checkOption?: {\n    isZero?: boolean,\n    isFalse?: boolean,\n}) {\n    const defaultCheckOption = {\n        isZero: checkOption?.isZero ?? false,\n        isFalse: checkOption?.isFalse ?? true,\n    };\n    return !isEmpty(value, defaultCheckOption);\n}\n\nexport const isNumber: IsNumberFn = value => !Number(value) !== true;\n\n\n/**\n * 驗證日期格式為 YYYY-MM-DD\n * @param str\n * @returns {boolean}\n */\nexport function isDate(str: string) {\n    const re = new RegExp('^([0-9]{4})[.-]{1}([0-9]{1,2})[.-]{1}([0-9]{1,2})$');\n    let infoValidation = true;\n\n    const strDataValue = re.exec(str);\n    if (strDataValue !== null) {\n        let i;\n        i = parseFloat(strDataValue[1]);\n        if (i <= 0 || i > 9999) {\n            /* 年 */\n            infoValidation = false;\n        }\n        i = parseFloat(strDataValue[2]);\n        if (i <= 0 || i > 12) {\n            /* 月 */\n            infoValidation = false;\n        }\n        i = parseFloat(strDataValue[3]);\n        if (i <= 0 || i > 31) {\n            /* 日 */\n            infoValidation = false;\n        }\n    } else {\n        infoValidation = false;\n    }\n    return infoValidation;\n}\n\n/**\n * 判斷是否為IP\n * @param ip\n * @returns {boolean}\n */\nexport function isIp(ip: string) {\n    const reg = /^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/;\n    // @ts-ignore\n    if (reg.test(ip) && RegExp.$1 < 256 && RegExp.$2 < 256 && RegExp.$3 < 256 && RegExp.$4 < 256) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * 判斷是否為JSON\n * @param jsonString string\n * @returns {boolean}\n */\nexport function isJSON(jsonString: string) {\n    try {\n        const obj = JSON.parse(jsonString);\n        if (obj && typeof obj === 'object' && obj !== null) {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n    return false;\n}\n","/**\n * 文本中的每個單詞以大寫字母開頭\n * @param str\n * @returns {string}\n */\nexport function toCapitalize(str: string) {\n    // return str.charAt(0).toUpperCase() + str.slice(1);\n    return str.replace(/\\b(\\w)/g, $1 => $1.toUpperCase());\n}\n\n/**\n * 語言代碼轉換 (en-us -> en-US)\n * @param str\n * @returns {string}\n */\nexport function lowerDashToLowerDashUpper(str: string) {\n    // eslint-disable-next-line no-useless-escape\n    const result = str.replace(/\\-(.*)/g, $1 => $1.toUpperCase());\n\n    // eslint-disable-next-line no-useless-escape\n    return result.replace(/(.*)+\\-/g, $1 => $1.toLowerCase());\n}\n\n\n/**\n * 大寫底線轉小駝峰\n * @param str\n */\nexport function upperLineToLowerCase(str: string) {\n    // eslint-disable-next-line no-useless-escape\n    return str.toLowerCase().replace(/\\_(\\w)/g, function(all, letter){\n        return letter.toUpperCase();\n    });\n}\n\n\n/**\n * 小駝峰轉大寫底線\n * @param str\n */\nexport function lowerCaseToUpLineCase(str: string): string {\n    return str.replace(/([A-Z])/g,'_$1').toUpperCase();\n}\n\n/**\n * 大駝峰轉大寫底線\n * @param str\n */\nexport function UpperCaseToLowerLineCase(str: string): string {\n    if(str){\n        const dataStr = str.replace(/([A-Z])/g,'_$1').toLowerCase();\n        if(dataStr.substr(0, 1) === '_'){\n            return dataStr.substr(1);\n        }\n    }\n    return '';\n}\n\n/**\n * RGB轉16進位\n * @param rgb\n * @returns {*}\n */\nexport function RGBToHex(rgb: string) {\n    const hexDigits = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n    const hex = function (x: any) {\n        // eslint-disable-next-line no-mixed-operators\n        return Number.isNaN(x) ? '00' : hexDigits[(x - x % 16) / 16] + hexDigits[x % 16];\n    };\n    const tmp: any = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n    return hex(tmp[1]) + hex(tmp[2]) + hex(tmp[3]);\n}\n\n/**\n * HEX(16進位)色碼轉轉RGB\n * @param hex 色碼\n * @returns {*}\n */\nexport function HEXToRGB(hex: any) {\n    hex = hex.replace('#', '');\n    if (/^[0-9A-F]{3}$|^[0-9A-F]{6}$/.test(hex.toUpperCase())) {\n        if (hex.length === 3) {\n            hex = hex.match(/[0-9A-F]/g);\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n        }\n\n        const r = parseInt(hex.substr(0, 2), 16);\n        const g = parseInt(hex.substr(2, 2), 16);\n        const b = parseInt(hex.substr(4, 2), 16);\n        return [r, g, b];\n    }\n    return hex;\n}\n\n/**\n * HEX(16進位)色碼轉RGBA\n * @param hex\n * @param opacity\n * @returns {Object|number[]}\n */\nexport function HEXToRGBAStr(hex: string, opacity = 1) {\n    const rgba = HEXToRGB(hex);\n    if (typeof rgba === 'object') {\n        return `rgba(${[...rgba, opacity].join(',')})`;\n    }\n    return [0, 0, 0, 1];\n\n}\n\n/**\n * 數字補0方法\n * @param val 原字串\n * @param length 補滿的目標长度\n * @returns {*}\n */\nexport function paddingLeft(val: string|number, length: number): string {\n    const replaceStr = String(val);\n    if (replaceStr.length < length) {\n        return paddingLeft(`0${replaceStr}`, length);\n    }\n    return replaceStr;\n}\n\n/**\n * 轉換外部Props資訊欄位與內部相同\n * @param obj 原物件\n * @param mapping 新物件Key Value\n * @returns {{}}\n */\nexport function autoMapper<A = object>(obj: object, mapping: object): A {\n    /*\n    範例:\n        const obj1 = {\n            firstName: 'Sam',\n            lastName: 'Xiao',\n            age: 20,\n        };\n\n        const obj2 = autoMapper(obj1, {\n            firstName: 'realName',\n            lastName: 'niceName',\n        });\n    */\n\n    // @ts-ignore\n    return Object.entries(obj).reduce((accm, [key, value]) => {accm[mapping[key] || key] = value;\n        return accm;\n    }, {});\n}\n\n\n/**\n * 反轉陣列\n * @param obj\n */\nexport function reverseObj(obj: {[key: string]: any}) {\n    return Object.entries(obj)\n        .reduce((prev, [key, value]) => {\n            return {...prev, [value]: key};\n        }, {});\n}\n\n\n\n\n\n/**\n * 將物件資料轉成 FormData\n * (若值為物件會被轉成JSON字串)\n * @param data\n */\nexport function obj2formData(data: any) {\n    const formData = new FormData();\n\n    const appendData = (whileData: any) => {\n        for(const [key, value] of Object.entries(whileData)){\n            if(Array.isArray(value)){\n                let i = 0;\n                for(const w of value){\n                    if(typeof w === 'object'){\n                        for(const [objKey, objVal] of Object.entries(w)){\n                            // @ts-ignore\n                            formData.append(`${key}[${i}][${objKey}]`, objVal);\n                        }\n                    }else{\n                        formData.append(`${key}[${i}]`, w);\n                    }\n                    i += 1;\n                }\n            }else if(typeof value !== 'undefined' && value !== null){\n                // @ts-ignore\n                formData.append(key, value);\n            }\n        }\n    };\n\n    appendData(data);\n    return formData;\n}\n\n\n\n/**\n * 過去陣列中不等於True的值\n *\n * (用於Table Checkbox取ID)\n * @param checkedId\n */\nexport function objFilterNotTrue2Array(checkedId: {\n    [id: number]: string| number\n}) {\n    const ids = [];\n    for(const id in checkedId){\n        // 過濾掉不等於 true 的 Key\n        if(checkedId[id]){\n            ids.push(Number(id));\n        }\n    }\n    return ids;\n}\n\n\n\n/**\n * 合併陣列中相同的Value\n * @param data\n */\nexport function mergeArraySameValue(data: any[]) {\n    // @ts-ignore\n    return [...(new Set(data))];\n}\n\n\n\n\n/**\n * 檔案轉 Base64\n * ref: https://stackoverflow.com/questions/15960508/javascript-async-readasdataurl-multiple-files/17370825\n * @param file\n */\nexport function fileConvertBase64(file: File): Promise<string|undefined>{\n    const reader = new FileReader();\n    return new Promise(resolve => {\n        reader.onload = ev => {\n            // @ts-ignore\n            resolve(ev.target.result);\n        };\n        reader.readAsDataURL(file);\n    });\n}\n","import styled from 'styled-components/macro';\nimport {Col, Container, GridThemeProvider, Row} from 'library/styled-bs-grid';\nimport {Controller, useForm} from 'react-hook-form';\nimport {IFormData} from './types';\nimport {useMemo} from 'react';\nimport {isJSON} from 'utils/equal';\nimport {toCapitalize, UpperCaseToLowerLineCase} from 'utils/format';\n\n\n\n\nconst convertFieldType = (key: string, field: any) => {\n\n    console.log('typeof field', typeof field, key);\n    if(field !== null) {\n        switch (typeof field) {\n            case 'boolean':\n                return {type: 'bool', default: false};\n\n            case 'number':\n                if (field.toString().indexOf('.') != -1) {\n                    return {type: 'double', default: 0};\n                }\n                return {type: 'int', default: 0};\n\n            case 'string':\n                return {type: 'String', default: undefined};\n\n            case 'object':\n                if(Array.isArray(field)){\n                    if(field.length > 0){\n                        if(['string','number','boolean'].includes((typeof field[0]))){\n                            return {type: 'List<String>', default: undefined};\n                        }\n                        return {type: `List<${toCapitalize(key)}>`, default: undefined, newObjName: toCapitalize(key), newObj: field[0]};\n                    }\n                    return {type: `List<dynamic>`, default: undefined};\n\n                }\n                return {type: toCapitalize(key), default: undefined, newObjName: toCapitalize(key), newObj: field};\n\n        }\n    }\n\n    return {type: 'dynamic', default: undefined};\n};\n\n\nlet dataChild: any[] = [];\n\nconst convertField = (modelName: string, jsonObj: any) => {\n    const constructor: string[] = [];\n    const field: string[] = [];\n    // const jsonObj = JSON.parse(jsonString);\n\n\n    if(typeof jsonObj === 'object'){\n        for (const key in jsonObj) {\n            // console.log(key, jsonObj[key]);\n            const fieldType = convertFieldType(key, jsonObj[key]);\n            const defaultValue = fieldType.default !== undefined ? ` = ${fieldType.default}`:'';\n            constructor.push(`       this.${key}${defaultValue},`);\n            // field.push(`  ${fieldType.type}${fieldType.default === undefined ? '?':''} ${key};`);\n            field.push(`  ${fieldType.type}? ${key};`);\n\n            if(fieldType.newObj !== undefined && fieldType.newObjName !== undefined){\n                convertField(fieldType.newObjName, fieldType.newObj);\n            }\n        }\n\n        dataChild.push({\n            name: modelName,\n            constructor: constructor,\n            field: field,\n        });\n    }\n\n    return dataChild;\n\n\n};\n\n\nconst handleDownload = (modelName: string, data: string) => {\n    //藉型別陣列建構的 blob 來建立 URL\n    let fileName = `${UpperCaseToLowerLineCase(modelName)}.dart`;\n    let blob = new Blob([data], {\n        type: \"application/octet-stream\",\n    });\n    var href = URL.createObjectURL(blob);\n    // 從 Blob 取出資料\n    var link = document.createElement(\"a\");\n    document.body.appendChild(link);\n    link.href = href;\n    link.download = fileName;\n    link.click();\n};\n\nconst JsonToDart = () => {\n    const {control, watch} = useForm<IFormData>();\n\n    const [modelName, jsonString, isUseCopyWith] = watch(['modelName', 'jsonString', 'isUseCopyWith']);\n\n    let jsonObj = useMemo(() => {\n        if (isJSON(jsonString)) {\n            return JSON.parse(jsonString);\n        }\n    }, [jsonString]);\n\n\n\n    const renderDartModel = () => {\n        dataChild = [];\n        const data = convertField(modelName, jsonObj).reverse();\n\n        return `\n${isUseCopyWith ? 'import \\'package:copy_with_extension/copy_with_extension.dart\\';':''}\nimport 'package:json_annotation/json_annotation.dart';\n\npart '${UpperCaseToLowerLineCase(modelName)}.g.dart';\n\n${data.map(row => {\n            return `\n${isUseCopyWith ? '@CopyWith()':''}\n@JsonSerializable()\nclass ${row.name} {\n  ${row.name}({\n${row.constructor.join('\\n')}\n  });\n\n${row.field.join('\\n')} \n \n  /// JsonSerializable Build\n  factory ${row.name}.fromJson(Map<String, dynamic> json) => _$${row.name}FromJson(json);\n  Map<String, dynamic> toJson() => _$${row.name}ToJson(this);\n}\n`\n}).join('\\n')}\n\n    `;\n};\n\n    const convertData = renderDartModel();\n\n    return (\n        <>\n\n                <div className=\"text-center\">\n                    <h1>Json To Dart Model</h1>\n                </div>\n                <Container className=\"pt-3\">\n                    <Row>\n                        <Col col>\n                            <Row>\n                                <Col col={24}>\n                                    <Controller\n                                        control={control}\n                                        name=\"modelName\"\n                                        defaultValue=\"\"\n                                        render={({field}) => {\n                                            return (<input\n                                                style={{width: '100%'}}\n                                                type=\"text\"\n                                                {...field}\n                                            />);\n                                        }}\n                                    />\n\n                                </Col>\n                                <Col col={24}>\n                                    <Controller\n                                        control={control}\n                                        name=\"isUseCopyWith\"\n                                        defaultValue=\"\"\n                                        render={({field}) => {\n                                            return (<input\n                                                type=\"checkbox\"\n                                                {...field}\n                                            />);\n                                        }}\n                                    />\n                                     use CopyWith\n                                    <Controller\n                                        control={control}\n                                        name=\"jsonString\"\n                                        defaultValue=\"\"\n                                        render={({field}) => {\n                                            return (<textarea\n                                                style={{width: '100%', height: '100vh'}}\n                                                {...field}\n                                            />);\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n\n                        </Col>\n                        <Col col>\n                            <button type=\"button\" onClick={() => handleDownload(modelName, convertData)}>Download</button>\n                            <textarea\n                                style={{width: '100%', height: '100vh'}}\n                                value={convertData}\n                            />\n                        </Col>\n\n                    </Row>\n\n\n                </Container>\n        </>\n    );\n};\n\nexport default JsonToDart;\n","import {Col, Container, Row} from 'library/styled-bs-grid';\nimport {Controller, useForm} from 'react-hook-form';\nimport {IFormData} from './types';\nimport {useEffect, useMemo} from 'react';\nimport {isJSON} from 'utils/equal';\nimport {toCapitalize, UpperCaseToLowerLineCase} from 'utils/format';\n\n\n\n\nconst convertFieldType = (key: string, field: any) => {\n\n    console.log('typeof field', typeof field, key);\n    if(field !== null) {\n        switch (typeof field) {\n            case 'boolean':\n                return {type: 'bool', default: false};\n\n            case 'number':\n                if (field.toString().indexOf('.') != -1) {\n                    return {type: 'double', default: 0};\n                }\n                return {type: 'int', default: 0};\n\n            case 'string':\n                return {type: 'String', default: undefined};\n\n            case 'object':\n                if(Array.isArray(field)){\n                    if(field.length > 0){\n                        if(['string','number','boolean'].includes((typeof field[0]))){\n                            return {type: 'List<String>', default: undefined};\n                        }\n                        return {type: `List<${toCapitalize(key)}>`, default: undefined, newObjName: toCapitalize(key), newObj: field[0]};\n                    }\n                    return {type: `List<dynamic>`, default: undefined};\n\n                }\n                return {type: toCapitalize(key), default: undefined, newObjName: toCapitalize(key), newObj: field};\n\n        }\n    }\n\n    return {type: 'dynamic', default: undefined};\n};\n\n\nlet dataChild: any[] = [];\n\nconst convertField = (modelName: string|null, jsonObj: any) => {\n    const field: string[] = [];\n\n    if(typeof jsonObj === 'object'){\n        for (const key in jsonObj) {\n            // console.log(key, jsonObj[key]);\n            const fieldType = convertFieldType(key, jsonObj[key]);\n            field.push(`  ${fieldType.type} ${key};`);\n\n            if(fieldType.newObj !== undefined && fieldType.newObjName !== undefined){\n                convertField(fieldType.newObjName, fieldType.newObj);\n            }\n        }\n\n        if(modelName != null){\n            dataChild.push({\n                name: modelName,\n                field: field,\n            });\n        }\n\n    }\n\n    return dataChild;\n\n\n};\n\n\nconst handleDownload = (modelName: string, data: string) => {\n    //藉型別陣列建構的 blob 來建立 URL\n    let fileName = `${UpperCaseToLowerLineCase(modelName)}.dart`;\n    let blob = new Blob([data], {\n        type: \"application/octet-stream\",\n    });\n    var href = URL.createObjectURL(blob);\n    // 從 Blob 取出資料\n    var link = document.createElement(\"a\");\n    document.body.appendChild(link);\n    link.href = href;\n    link.download = fileName;\n    link.click();\n};\n\nconst JsonToTypescript = () => {\n    const {control, watch, setValue} = useForm<IFormData>();\n\n    const [modelName, jsonString, isUseCopyWith] = watch(['modelName', 'jsonString', 'isUseCopyWith']);\n\n\n    useEffect(() => {\n        setValue('jsonString', `\n{\n    \"user\": {\n        \"name\": \"jack\",\n        \"sex\": \"m\",\n        \"profile\": {\n             \"phone\": \"0919123123\",\n             \"mobile\": \"0918456456\",\n             \"detail\": {\n                 \"address\": \"taiwan chipn\"\n             }\n        }\n    }\n}\n`.trim())\n    }, []);\n\n\n    let jsonObj = useMemo(() => {\n        if (isJSON(jsonString)) {\n            return JSON.parse(jsonString);\n        }\n    }, [jsonString]);\n\n\n    const renderDartModel = () => {\n        dataChild = [];\n        const data = convertField(null, jsonObj).reverse();\n\n        return `\n${data.map(row => {\n            return `\ninterface ${row.name} {\n${row.field.join('\\n')} \n}\n`\n}).join('\\n').trim()}\n\n    `;\n};\n\n    const convertData = renderDartModel();\n\n    return (\n        <>\n\n                <div className=\"text-center\">\n                    <h1>Json To Typescript Class</h1>\n                </div>\n                <Container className=\"pt-3\">\n                    <Row>\n                        <Col col>\n                            <Row>\n\n                                <Col col={24}>\n                                    <Controller\n                                        control={control}\n                                        name=\"jsonString\"\n                                        defaultValue=\"\"\n                                        render={({field}) => {\n                                            return (<textarea\n                                                style={{width: '100%', height: '100vh'}}\n                                                {...field}\n                                            />);\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n\n                        </Col>\n                        <Col col>\n                            <textarea\n                                style={{width: '100%', height: '100vh'}}\n                                value={convertData}\n                            />\n                        </Col>\n\n                    </Row>\n\n\n                </Container>\n        </>\n    );\n};\n\nexport default JsonToTypescript;\n\n","import {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\n\n\n// Views\nimport NotFound from 'views/NotFound';\nimport JsonToDart from 'views/JsonToDart';\nimport JsonToTypescript from 'views/JsonToTypescript';\n\n\nconst RootRoute = () => {\n    return <Router >\n        <Switch>\n            <Route path=\"/to-dart\" exact component={JsonToDart}/>\n            <Route path=\"/to-typescript\" exact component={JsonToTypescript}/>\n            <Route path=\"/\" exact children={<Redirect to=\"/to-dart\"/>}/>\n\n            {/* NotFound */}\n            <Route path=\"*\" children={<NotFound/>}/>\n        </Switch>\n    </Router>\n};\n\nexport default RootRoute;\n","import {GridThemeProvider} from 'library/styled-bs-grid';\nimport {ConnectedRouter} from 'connected-react-router';\nimport getSetupParam from './setup';\n\nimport RootRoute from './RootRoute';\n\n\n\n\nconst setup = getSetupParam();\n\n\nconst App = () => {\n    return (\n        <GridThemeProvider gridTheme={setup.gridConfig}>\n            <RootRoute/>\n        </GridThemeProvider>\n    );\n};\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './views/App/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport OpenWindow from './library/open-window';\n\n\n\ndeclare global {\n    interface Window {\n        openWindow: any;\n    }\n}\n\nif (!Intl.PluralRules) {\n    require('@formatjs/intl-pluralrules/polyfill');\n    require('@formatjs/intl-pluralrules/locale-data/en'); // Add locale data for de\n    require('@formatjs/intl-pluralrules/locale-data/zh'); // Add locale data for de\n}\n\n// @ts-ignore\nif (!Intl.RelativeTimeFormat) {\n    require('@formatjs/intl-relativetimeformat/polyfill');\n    require('@formatjs/intl-relativetimeformat/locale-data/en'); // Add locale data for de\n    require('@formatjs/intl-relativetimeformat/locale-data/zh'); // Add locale data for de\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {css, FlattenSimpleInterpolation} from 'styled-components/macro';\nimport get from 'lodash/get';\nimport {themeName, defaultTheme} from '../config';\n\nconst getBreakpoints = (props: any) => ({\n    ...defaultTheme.gridBreakpoints,\n    ...get(props.theme[themeName], 'gridBreakpoints', {}),\n});\n\nconst media: any = Object.keys(defaultTheme.gridBreakpoints).reduce(\n    (accumulator, label) => {\n        const minMedia = (strings: any, ...interpolations: any) => css`\n              @media (min-width: ${(props: any) => getBreakpoints(props)[label]}px) {\n                ${css(strings, ...interpolations)};\n              }\n        `;\n        // @ts-ignore\n        accumulator[label] = minMedia;\n        return accumulator;\n    },\n    {},\n);\n\nfunction px2vw(pixels: number, pixelTotal: number = 320) {\n    return `${(pixels / pixelTotal) * 100}vw`;\n}\n\nconst replacePx2Vw = (css: FlattenSimpleInterpolation) => {\n    let re = /(\\d+)+(px)/gi;\n\n    return css.map(styleObj =>{\n        if(typeof styleObj === 'string'){\n            return styleObj.replace(re, (match, offset, string) => {\n                const px = Number(offset);\n                if(px === 0){\n                    return '0';\n                }else if(!isNaN(px)){\n                    return px2vw(px);\n                }\n                return match;\n            });\n        }\n        return styleObj;\n    });\n};\n\nmedia.px2vw = (strings: any, ...interpolations: any) => css`\n      @media (max-width: ${(props: any) => getBreakpoints(props).sm}px) {\n          ${replacePx2Vw(css(strings, ...interpolations))};\n      }\n`;\n\nexport default media;\n","/**\n * Library Default Setting\n *\n * ps: please check your project setting `src/config/grid.ts`\n */\n\nexport const themeName = 'styledBsGrid';\nexport const defaultTheme = {\n    gridGutterWidth: 10,\n    gridColumns: 24,\n    gridBreakpoints: {\n        xs: 0,\n        sm: 576,\n        md: 768,\n        lg: 992,\n        xl: 1200,\n        xxl: 1920,\n    },\n    containerMaxWidths: {\n        sm: 540,\n        md: 720,\n        lg: 960,\n        xl: 1140,\n        xxl: 1860,\n    },\n    gridGutterWidthMedia: {\n        sm: 10,\n        md: 10,\n        lg: 10,\n        xl: 10,\n        xxl: 10,\n    }\n};\n","import {ColCss} from './types';\n\nconst css: ColCss = {\n    col: (column: any, gridColumns: number) => {\n        let colFlexBasis = 0;\n\n        switch (column) {\n        case true:\n            return `\n          -ms-flex-preferred-size: 0;\n          -ms-flex-positive: 1;\n          flex-basis: 0;\n          flex-grow: 1;\n          max-width: 100%;\n        `;\n        case 'auto':\n            return `\n          -ms-flex: 0 0 auto;\n          flex: 0 0 auto;\n          width: auto;\n          max-width: none;\n        `;\n        default:\n            colFlexBasis = (100 / gridColumns) * column;\n            return `\n            -ms-flex: 0 0 ${colFlexBasis}%;\n            flex: 0 0 ${colFlexBasis}%;\n            max-width: ${colFlexBasis}%;\n        `;\n        }\n    },\n};\n\nexport default css;\n","import React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport getCss from './css';\nimport getDataName from './getDataName';\nimport media from '../../media';\nimport {isEmpty} from '../../utils';\nimport {themeName} from '../../config';\nimport {ColProps} from './types';\nimport {themeProps} from '../ThemeProvider/types';\n\ntype Props = ColProps & {\n    theme: themeProps;\n};\n\n// eslint-disable-next-line array-callback-return\nconst generateMedia = (props: any) => Object\n    .keys(props.theme[themeName].gridBreakpoints)\n    .filter(sizeName => sizeName !== 'xs')\n    .map(sizeName => {\n        return media[sizeName]`\n             padding-right: ${props.theme[themeName].gridGutterWidthMedia[sizeName]}px;\n             padding-left: ${props.theme[themeName].gridGutterWidthMedia[sizeName]}px;\n\n            ${!isEmpty(props[sizeName]) && css`\n                ${getCss.col(props[sizeName], props.theme[themeName].gridColumns)};\n            `}\n    `;\n    });\n\n/**\n * Col Component\n * breakpoints sort: sm => xl\n *\n * qa: min-height=1px\n * https://css-tricks.com/make-sure-columns-dont-collapse-horizontally/\n *\n */\nconst Col: any = styled.div.attrs((props: Props) => ({\n    'data-grid': 'col',\n    'data-debug': getDataName(props),\n}))`\n  position: relative;\n  width: 100%;\n  min-height: 1px;\n\n  ${(props: any) => css`\n     padding-right: ${props.theme[themeName].gridGutterWidth}px;\n     padding-left: ${props.theme[themeName].gridGutterWidth}px;\n\n     >[data-grid=row]{\n        flex: 0 1 100%;\n    }\n\n     min-width: 0; // 解決下層有使用 white-space: nowrap; 產生衝突跑版\n     ${props.col && getCss.col(props.col, props.theme[themeName].gridColumns)};\n\n     ${generateMedia(props)};\n `}\n`;\n\nexport default ({forwardRef, forwardAs, ...props}: ColProps) => <Col ref={forwardRef} as={forwardAs} {...props}/>;\n","import {IsNumberFn, SuffixFn} from './types';\n\nexport const isNumber: IsNumberFn = value => !Number(value) !== true;\nexport const suffix: SuffixFn = value => {\n    if (isNumber(value)) {\n        return `-${value}`;\n    } if (value === 'auto') {\n        return '-auto';\n    }\n    return '';\n};\nexport const isEmpty = (value: any, isCheckNumber0 = false) => (\n    value === undefined\n        || value === null\n        || value === false\n        || (isCheckNumber0 && value === 0)\n        || (!(value instanceof Date) && typeof value === 'object' && Object.keys(value).length === 0)\n        || (typeof value === 'string' && value.trim().length === 0)\n);\n","import React from 'react';\nimport styled, {css} from 'styled-components/macro';\nimport {ContainerProps} from './types';\n\nimport {themeName} from '../../config';\nimport media from '../../media';\nimport getDataName from './getDataName';\n\nconst generateMedia = (props: any) => Object.keys(props.theme[themeName].gridBreakpoints)\n    .map(sizeName => {\n        if (props.theme[themeName].gridBreakpoints[sizeName] > 0) {\n            return media[sizeName]`\n                max-width: ${props.theme[themeName].containerMaxWidths[sizeName]}px;\n            `;\n        }\n        return false;\n    })\n    .filter(row => row !== false);\n;\n\n/**\n * Row Component\n */\nconst Container: any = styled.div.attrs((props: ContainerProps) => ({\n    'data-grid': 'container',\n    'data-debug': getDataName(props),\n}))`\n  width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n\n  ${(props: any) => css`\n     padding-right: ${props.theme[themeName].gridGutterWidth}px;\n     padding-left: ${props.theme[themeName].gridGutterWidth}px;\n\n     ${!props.fluid && css`\n        ${generateMedia(props)};\n    `}\n `}\n`;\n\nexport default (props: ContainerProps) => <Container {...props}/>;\n","import React from 'react';\nimport styled, {css} from 'styled-components/macro';\nimport getDataName from './getDataName';\nimport {themeName} from '../../config';\nimport {RowProps} from './types';\nimport media from '../../media';\n\n/**\n * Get Row Margin\n * @param props\n * @returns {*}\n */\nconst getRowMargin = (props: any) => (props.noGutters ? 0 : `-${props.theme[themeName].gridGutterWidth}px`);\n\nconst generateMedia = (props: any) => Object.keys(props.theme[themeName].gridBreakpoints)\n    .map(sizeName => {\n        if (props.theme[themeName].gridBreakpoints[sizeName] > 0) {\n            return media[sizeName]`\n                margin-left: -${props.theme[themeName].gridGutterWidthMedia[sizeName]}px;\n                margin-right: -${props.theme[themeName].gridGutterWidthMedia[sizeName]}px;\n            `;\n        }\n        return false;\n    })\n    .filter(row => row !== false);\n;\n\n/**\n * Row Component\n */\nconst Row: any = styled.div.attrs((props: any) => ({\n    'data-grid': 'row',\n    'data-debug': getDataName(props),\n}))`\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n\n  ${(props: any) => css`\n     margin-right: ${getRowMargin(props)};\n     margin-left: ${getRowMargin(props)};\n\n     // ps: 設定會 width 100% 會產生 margin 抵銷失敗\n\n\n     ${!props.noGutters && css`\n        ${generateMedia(props)}\n     `}\n\n     ${props.noGutters && css`\n        >[data-grid=col]{\n            padding-right: 0;\n            padding-left: 0;\n        }\n     `}\n `}\n`;\n\nexport default ({forwardAs, ...props}: RowProps) => <Row as={forwardAs} {...props}/>;\n\n","import React from 'react';\nimport {ThemeProvider} from 'styled-components/macro';\nimport {defaultTheme} from '../../config';\nimport {themeProps} from './types';\n\nconst GridThemeProvider = (props: themeProps) => {\n    const {gridTheme = {}, children} = props;\n\n    const composeGridTheme = {styledBsGrid: Object.assign({}, defaultTheme, gridTheme)};\n\n    return <ThemeProvider theme={composeGridTheme}>{children}</ThemeProvider>;\n};\n\nexport default GridThemeProvider;\n"],"sourceRoot":""}